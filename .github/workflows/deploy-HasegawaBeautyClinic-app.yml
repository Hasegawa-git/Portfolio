name: deploy-HasegawaBeautyClinic-theme

on:
  push:
    branches: [ main ]
    paths:
      - 'HasegawaBeautyClinic/app/wp-theme/**'
      - '.github/workflows/deploy-HasegawaBeautyClinic-app.yml'
  workflow_dispatch:

concurrency:
  group: hbc-theme
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Package theme
        run: |
          cd HasegawaBeautyClinic/app/wp-theme
          zip -r /tmp/hbc-theme.zip . -x "*.DS_Store"

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.HBC_SSH_KEY }}

      - name: Upload & deploy on Lightsail
        env:
          SSH_HOST: ${{ secrets.HBC_SSH_HOST }}
          SSH_USER: ${{ secrets.HBC_SSH_USER }}
          WP_THEME_PATH: ${{ secrets.HBC_WP_THEME_PATH }}
          WP_CLI_BIN: ${{ secrets.HBC_WP_CLI_BIN }}
          WP_THEME_SLUG: ${{ secrets.HBC_WP_THEME_SLUG }}
        run: |
          scp -o StrictHostKeyChecking=no /tmp/hbc-theme.zip ${SSH_USER}@${SSH_HOST}:/tmp/hbc-theme.zip

          # Pass env vars to the remote shell explicitly, then run our script via bash -s
          ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} \
            "WP_THEME_PATH='${WP_THEME_PATH}' WP_CLI_BIN='${WP_CLI_BIN}' WP_THEME_SLUG='${WP_THEME_SLUG}' bash -s" <<'EOSSH'
          set -euo pipefail

          # sanity check
          if [ -z "${WP_THEME_PATH:-}" ]; then
            echo "[ERROR] WP_THEME_PATH is empty. Set HBC_WP_THEME_PATH secret." >&2
            exit 1
          fi

          sudo mkdir -p "$WP_THEME_PATH"
          sudo rm -rf "$WP_THEME_PATH"/*
          sudo unzip -o /tmp/hbc-theme.zip -d "$WP_THEME_PATH"
          sudo rm -f /tmp/hbc-theme.zip

          # permissions
          sudo find "$WP_THEME_PATH" -type d -exec chmod 755 {} \;
          sudo find "$WP_THEME_PATH" -type f -exec chmod 644 {} \;

          # --- Detect WordPress root safely ---
          # Try from the theme path (../../), then common Bitnami locations.
          CANDIDATES=(
            "$(realpath "$WP_THEME_PATH/../.." 2>/dev/null || echo "$WP_THEME_PATH/../..")"
            "/opt/bitnami/wordpress"
            "/bitnami/wordpress"
          )

          WP_ROOT=""
          for p in "${CANDIDATES[@]}"; do
            if [ -f "$p/wp-load.php" ]; then
              WP_ROOT="$p"
              break
            fi
          done

          if [ -z "$WP_ROOT" ]; then
            echo "[ERROR] Could not find WordPress root from WP_THEME_PATH='$WP_THEME_PATH'." >&2
            echo "        Tried: ${CANDIDATES[*]}" >&2
            exit 1
          fi
          echo "[INFO] WordPress root detected: $WP_ROOT"

          # --- Resolve WP-CLI binary ---
          if [ -z "${WP_CLI_BIN:-}" ]; then
            if command -v wp >/dev/null 2>&1; then
              WP_CLI_BIN="$(command -v wp)"
            elif [ -x "/opt/bitnami/wp-cli/bin/wp" ]; then
              WP_CLI_BIN="/opt/bitnami/wp-cli/bin/wp"
            fi
          fi

          # --- Run WP-CLI if available ---
          if [ -n "${WP_CLI_BIN:-}" ] && [ -x "$WP_CLI_BIN" ]; then
            echo "[INFO] Using WP-CLI at: $WP_CLI_BIN"
            # Activate theme on first deploy (ignore error if already active)
            sudo "$WP_CLI_BIN" --path="$WP_ROOT" theme activate "${WP_THEME_SLUG:-HasegawaBeautyClinic}" --allow-root || true
            sudo "$WP_CLI_BIN" --path="$WP_ROOT" rewrite flush --hard --allow-root
            sudo "$WP_CLI_BIN" --path="$WP_ROOT" cache flush --allow-root || true
          else
            echo "[WARN] WP-CLI not found or not executable. Skipping theme activation and cache flush."
          fi

          # Bitnami service restart (if available)
          if [ -f /opt/bitnami/ctlscript.sh ]; then
            sudo /opt/bitnami/ctlscript.sh restart php-fpm || true
            sudo /opt/bitnami/ctlscript.sh restart apache || true
          fi
          EOSSH